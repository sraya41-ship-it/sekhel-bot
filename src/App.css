import React, { useState } from "react";

export default function App() {
  const [messages, setMessages] = useState([
    { sender: "bot", text: "ברוך הבא ל'שקל עם שכל' 🤖💡 המחשבון שלך לקבלת החלטות חכמות על הוצאות. ספר לי מה ההתלבטות שלך." }
  ]);
  const [input, setInput] = useState("");
  const [summary, setSummary] = useState("");

  const handleSend = () => {
    if (!input.trim()) return;

    const newMessages = [...messages, { sender: "user", text: input }];
    setMessages(newMessages);

    // תשובה בסיסית מהבוט
    let botReply = "";
    if (input.includes("לקנות") || input.includes("קנייה")) {
      botReply =
        "אני מבין שאתה חושב על קנייה 🛒. חשוב לבדוק: האם זה צורך אמיתי? האם זה מתאים לתקציב שלך? זכור – דחיית סיפוקים מגדילה את החוסן הכלכלי שלך.";
    } else if (input.includes("השקעה")) {
      botReply =
        "השקעה יכולה להיות צעד חכם 📈, אבל שים לב – תמיד חשוב להבין את הסיכונים, לא לשים את כל הביצים בסל אחד, ולבדוק אופק זמן.";
    } else {
      botReply =
        "תודה ששיתפת 🙏. בוא ננסה להבין יחד – מה היתרונות והחסרונות בהחלטה הזו עבורך?";
    }

    setMessages((prev) => [...prev, { sender: "bot", text: botReply }]);
    setInput("");
  };

  const handleKeyDown = (e) => {
    if (e.key === "Enter") handleSend();
  };

  const handleSummarize = () => {
    const userInputs = messages.filter((m) => m.sender === "user").map((m) => m.text);
    if (userInputs.length === 0) {
      setSummary("עוד לא סיפרת לי מספיק כדי שאוכל לסכם 🤔.");
      return;
    }
    setSummary(
      `הנה הסיכום של ההתלבטות שלך: ${userInputs.join(" | ")}.\n\nלסיכום – קח רגע לחשוב, אל תמהר, והחלטה שקולה תחסוך לך כסף ועוגמת נפש בעתיד. 💡`
    );
  };

  return (
    <div className="min-h-screen flex flex-col items-center justify-center bg-gradient-to-br from-blue-50 to-indigo-100 p-6">
      <div className="max-w-xl w-full bg-white rounded-2xl shadow-lg p-6 flex flex-col">
        <h1 className="text-2xl font-bold text-indigo-700 mb-4 text-center">
          שקל עם שכל 💬
        </h1>
        <div className="flex-1 overflow-y-auto mb-4 space-y-2 border rounded-lg p-3 bg-gray-50">
          {messages.map((msg, idx) => (
            <div
              key={idx}
              className={`p-2 rounded-lg max-w-[80%] ${
                msg.sender === "user"
                  ? "ml-auto bg-indigo-500 text-white"
                  : "mr-auto bg-gray-200 text-gray-800"
              }`}
            >
              {msg.text}
            </div>
          ))}
        </div>

        <div className="flex space-x-2">
          <input
            value={input}
            onChange={(e) => setInput(e.target.value)}
            onKeyDown={handleKeyDown}
            placeholder="כתוב את ההתלבטות שלך כאן..."
            className="flex-1 p-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-400"
          />
          <button
            onClick={handleSend}
            className="bg-indigo-600 text-white px-4 py-2 rounded-lg hover:bg-indigo-700 transition"
          >
            שלח
          </button>
        </div>

        <button
          onClick={handleSummarize}
          className="mt-4 bg-green-600 text-white px-4 py-2 rounded-lg hover:bg-green-700 transition"
        >
          סכם אותי 📌
        </button>

        {summary && (
          <div className="mt-4 p-3 bg-yellow-50 border border-yellow-300 rounded-lg text-sm text-gray-800 whitespace-pre-line">
            {summary}
          </div>
        )}
      </div>
    </div>
  );
}
